'''Лінійний пошук'''

# У даній задачі задано 2 масива, та 2 шуканих елемента. Перший масив задано попередньо, і шуканий елемент (15) завжди буде знаходитись на позиції 4.\
# Другий масив і шуканий елемент задає користувач. Елемент може бути у масиві, або ж бути відсутнім у ньому.

import numpy as np # імпортуємо бібліотеку NumPy

while True:
    while True:
        try:
            A = np.array((1, 5, 7, 10, 15, 25))  # задаємо масив А за допомогою функції array з бібліотеки numpy
            x = 15  # задаємо перший шуканий елемент
            B_elem = int(
                input('Введіть кількість елементів масиву B: '))  # користувач вводить кількість елементів у масиві В
            B = np.zeros(B_elem, dtype=int)  # ініціалізуємо масив В, заповнюючи його нулями
            y = int(input('Введіть шуканий елемент у масиві B: '))  # користувач задає другий шуканий елемент

            for i in range(B_elem):
                B[i] = int(
                    input(f'Введіть елемент B[{i}]: '))  # за допомгою циклу надаємо значення кожному елементу масива В
            break
        except ValueError:
            print('Кількість елементів масиву і шуканий елемент повинні бути задані цілими числами.')
            print()

    print()
    print('Масив А:\n', A) # виводимо масив А
    print() # відступ
    print('Масив B:\n', B) # виводимо масив В
    print() # відступ

    n = len(A) # визначаємо довжину масиву А
    i = 0 # позицій шуканого елемента у масиві А
    k = len(B) # визначаємо довжину масиву В
    z = 0 # позицій шуканого елемента у масиві В

    count1 = 0 # змінна для визначення кількості порівнянь шуканого елемента у масиві А
    count2 = 0 # змінна для визначення кількості порівнянь шуканого елемента у масиві B
    while i < n and A[i] != x: # за допомогою циклу визначаємо позицію шуканого елементу (якщо він є), перевіряючи на кожній ітерації наступний елемент та визначаємо кількість порівнянь
        i += 1
        count1 += 1
    while z < k and B[z] != y: # те ж саме і для іншого масиву
        z += 1
        count2 += 1

    if(i == n): # якщо елемент пройшов весь масив, і його позиція = довжині масиву, то елемент не знайдено у масиві. інакше - елемент знаходиться на позиції і
        print(f'Елемент {x} не знайдений у масиві А.')
        print(f'Кількість порівнянь: {count1}.') # виводимо кількість порівнянь
    else:
        print(f'Елемент {x} знайдений на позиції {i}.')
        print(f'Кількість порівнянь: {count1 + 1}.') # виводимо кількість порівнянь + 1 (тому що лічильник знаходиться всередині циклу, і \
        # якщо шуканий елемент зустрічається, то порівняння відбувається, але до лічильника не добавляється +1 порівняння.

    print()
    if(z == k):
        print(f'Елемент {y} не знайдений у масиві А.') # якщо елемент пройшов весь масив, і його позиція = довжині масиву, то елемент не знайдено у масиві. інакше - елемент знаходиться на позиції z
        print(f'Кількість порівнянь: {count2}.') # виводимо кількість порівнянь
    else:
        print(f'Елемент {y} знайдений на позиції {z}.')
        print(f'Кількість порівнянь: {count2 + 1}.') # виводимо кількість порівнянь + 1 (тому що лічильник знаходиться всередині циклу, і \
        # якщо шуканий елемент зустрічається, то порівняння відбувається, але до лічильника не добавляється +1 порівняння.

    print()
    print('Бажаєте повторити задачу?') # питаємо чи бажає користувач повторити задачу
    while True:
        question = input('(Так/Ні): ')
        if (
                question == 'Так' or question == 'так' or question == 'Yes' or question == 'yes' or question == 'y' or question == '+'):
            print()
            break
        elif (
                question == 'Ні' or question == 'ні' or question == 'No' or question == 'no' or question == 'n' or question == '-'):
            exit(0)
        else:
            print()
            print('Бажаєте повторити задачу?')
